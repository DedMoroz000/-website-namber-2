import random
from flask import Flask
from datetime import datetime

app = Flask(__name__)

@app.route("/")
def index():
    return """
    <h1>–≠—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞!</h1>
    <a href="/namber/3">–ü—Ä–∏—á–∏–Ω—ã</a><br>
    <a href="/namber/2">–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ –Ω–∞–ø–∏—Å–∞—Ç—å</a><br>
    <a href="/namber">–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</a><br>
    <a href="/news/1">–ù–æ–≤–æ—Å—Ç–∏</a><br>
    <a href="/minus/12/10">–ú–∏–Ω—É—Å</a><br>
    <a href="/plus/7/5">–ü–ª—é—Å</a><br>
    <a href="/divide/20/4">–î–µ–ª–µ–Ω–∏–µ</a><br>
    <a href="/coin">–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É</a><br>
    <a href="/random/1/100">–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ</a><br>
    <a href="/reverse/hello">–û–±—Ä–∞—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç</a><br>
    <a href="/multiply/6/7">–£–º–Ω–æ–∂–µ–Ω–∏–µ</a><br>
    <a href="/factorial/5">–§–∞–∫—Ç–æ—Ä–∏–∞–ª</a><br>
    <a href="/time">–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è</a><br>
    <a href="/encrypt/hello/3">–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</a><br>
    <a href="/fibonacci/10">–§–∏–±–æ–Ω–∞—á—á–∏</a><br>
    <a href="/prime/7">–ü—Ä–æ–≤–µ—Ä–∫–∞ —á–∏—Å–ª–∞ –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É</a><br>
    """

# –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/namber")
def namber_1():
    return "<h1>–≠—Ç–æ –≤—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h1>"

@app.route("/namber/2")
def namber_2():
    return "<h1>–≠—Ç–æ —Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h1>"

@app.route("/namber/3")
def namber_3():
    reasons = [
        '–∏–≥—Ä—ã', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', '–°—Ç—Ä–∏–º–∏–Ω–≥–æ–≤—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã', 
        '–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –∫–æ–º–º–µ—Ä—Ü–∏—è', '–í–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–∏—Ä—ã –∏ –º–µ—Ç–∞–≤—Å–µ–ª–µ–Ω–Ω—ã–µ',
        '–ê–∑–∞—Ä—Ç–Ω—ã–µ –∏–≥—Ä—ã', '–û–Ω–ª–∞–π–Ω-–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞', '–ü—Ä–æ–≥—Ä–∞–º–º—ã –¥–ª—è —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞'
    ]
    return f"<h1>–†–∞–Ω–¥–æ–º–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: {random.choice(reasons)}</h1>"

@app.route("/news/<int:number>")
def news(number):
    return f"<h1>–í—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {number}</h1>"


@app.route('/plus/<int:a>/<int:b>')
def plus(a, b):
    result = a + b
    return f'<h1>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}</h1>'

@app.route('/minus/<int:a>/<int:b>')
def minus(a, b):
    result = a - b
    return f'<h1>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}</h1>'

@app.route('/multiply/<int:a>/<int:b>')
def multiply(a, b):
    result = a * b
    return f'<h1>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}</h1>'

@app.route('/divide/<int:a>/<int:b>')
def divide(a, b):
    if b == 0:
        return "<h1>–î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!</h1>"
    result = a / b
    return f'<h1>–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}</h1>'

@app.route('/coin')
def coin():
    result = random.choice(["—Ä–µ—à–∫–∞", "–æ—Ä—ë–ª ü¶Ö"])
    return f"<h1>–í—ã–ø–∞–ª–æ: {result}</h1>"

@app.route('/random/<int:start>/<int:end>')
def random_number(start, end):
    if start > end:
        return "<h1>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω</h1>"
    number = random.randint(start, end)
    return f"<h1>–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É {start} –∏ {end}: {number}</h1>"

@app.route('/reverse/<string:text>')
def reverse_text(text):
    reversed_text = text[::-1]
    return f"<h1>–û–±—Ä–∞—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç: {reversed_text}</h1>"

@app.route('/factorial/<int:n>')
def factorial(n):
    if n < 0:
        return "<h1>–§–∞–∫—Ç–æ—Ä–∏–∞–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª</h1>"
    result = 1
    for i in range(1, n + 1):
        result *= i
    return f"<h1>–§–∞–∫—Ç–æ—Ä–∏–∞–ª {n}: {result}</h1>"

@app.route('/time')
def current_time():
    now = datetime.now()
    formatted_time = now.strftime("%Y-%m-%d %H:%M:%S")
    return f"<h1>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {formatted_time}</h1>"

@app.route('/encrypt/<string:text>/<int:shift>')
def encrypt(text, shift):
    encrypted_text = ''.join(chr((ord(char) - 97 + shift) % 26 + 97) if char.islower() else char for char in text)
    return f"<h1>–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç: {encrypted_text}</h1>"

@app.route('/fibonacci/<int:n>')
def fibonacci(n):
    if n < 0:
        return "<h1>–ß–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª</h1>"
    a, b = 0, 1
    for _ in range(n):
        a, b = b, a + b
    return f"<h1>{n}-–µ —á–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏: {a}</h1>"

@app.route('/prime/<int:n>')
def is_prime(n):
    if n < 2:
        return f"<h1>–ß–∏—Å–ª–æ {n} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º</h1>"
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return f"<h1>–ß–∏—Å–ª–æ {n} –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º</h1>"
    return f"<h1>–ß–∏—Å–ª–æ {n} —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º</h1>"

if __name__ == "__main__":
    app.run(debug=True)
